{"version":3,"sources":["components/scrollDate/ScrollDate.js","components/timetable/TimeTable.js","panels/Home.js","img/persik.png","panels/Persik.js","panels/Setting.js","App.js","index.js"],"names":["ScrollDate","goDate","useState","commonDate","setCommonDate","useEffect","setTimeout","id","date","active","activePanel","className","showArrows","getScrollToLeft","i","getScrollToRight","style","display","length","map","item","stretched","size","onClick","selectedDate","arDate","forEach","goActive","mode","PropTypes","func","isRequired","raspisanie","group","items","number","name","teacher","office","TimeTable","arTimeTable","setArTimeTable","lesson","string","Home","go","fetchedUser","activeDate","setActiveDate","left","header","Persik","props","src","persik","alt","groups","value","label","icon","Setting","React","groupsChipsProps","onChange","options","placeholder","emptyText","top","ChipsSelect","showSelected","closeAfterSelect","onChangeStart","e","option","preventDefault","alert","renderChip","rest","before","renderOption","otherProps","App","setActivePanel","setUser","popout","setPopout","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d94817dc.chunk.js","sourcesContent":["import { useEffect, useState, Fragment } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { View, Panel, Group, HorizontalScroll, PanelSpinner, Button} from '@vkontakte/vkui';\n\nimport './style.css';\n\nconst ScrollDate = ({goDate}) => {\n    const [commonDate, setCommonDate] = useState([]);\n\n    useEffect(() => {\n        setTimeout(() => {\n        setCommonDate([\n            {\n                id:1,\n                date:'10.07.2021',\n                active:true\n            },\n            {\n                id:2,\n                date:'12.07.2021',\n            },\n            {\n                id:3,\n                date:'13.07.2021',\n            },\n            {\n                id:4,\n                date:'14.07.2021',\n            },\n            {\n            id:5,\n            date:'15.07.2021',\n            },\n            {\n            id:6,\n            date:'22.07.2021',\n            },\n            {\n                id:7,\n                date:'23.07.2021',\n            },\n            {\n            id:8,\n            date:'24.07.2021',\n            },\n            {\n            id:9,\n            date:'31.07.2021',\n            }\n        ]);\n        }, 500);\n    }, []);\n\n    const goActive = (selectedDate) => {\n        let arDate = [...commonDate];\n\n        arDate.forEach(item => {\n            if(item.active)\n                delete item.active;\n            \n            if(item.date === selectedDate)\n                item.active = true\n        });\n\n        setCommonDate(arDate);\n\n        goDate(selectedDate);\n    };\n\n    return (\n        <View activePanel=\"horizontal\" className=\"view-container__date\">\n        <Panel id=\"horizontal\">    \n            <Group>\n            <HorizontalScroll showArrows getScrollToLeft={i => i - 120} getScrollToRight={i => i + 120}>\n                <div style={{ display: 'flex' }}>\n                {commonDate.length === 0 && <PanelSpinner />}\n                {commonDate.length > 0 &&\n                <Fragment>\n                    {commonDate.map((item) => {\n                    return (\n                        <Button className=\"scroll-date__item\" stretched size=\"l\" onClick={() => goActive(item.date)} mode={item.active ? 'commerce' : 'secondary'}  key={item.id}>\n                            {item.date}\n                        </Button>\n                    )\n                    })}\n                </Fragment>\n                }\n                </div>\n            </HorizontalScroll>\n            </Group>\n        </Panel>\n        </View>\n    );\n};\n\nScrollDate.PropTypes = {\n    goDate:PropTypes.func.isRequired,\n};\n\nexport default ScrollDate;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Group, Card, CardGrid} from '@vkontakte/vkui';\n\nimport './style.css';\n//Массив с расписание групп\nconst raspisanie = [\n    {\n        id:1,\n        group:'kc-15-01',\n        items:[\n            {\n                number:'1',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'2',\n                name:'ПП.01 Производственная практика (по\\\n                    профилю специальности) (Исполнительская\\\n                    практика)',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'3',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'4',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'5',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n        ]\n    },\n    {\n        id:1,\n        group:'pks-15-01',\n        items:[\n            {\n                number:'1',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'2',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'3',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'4',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n            {\n                number:'5',\n                name:'Основый программирования',\n                teacher: 'Анашкин И.А.',\n                office:'19/1'\n            },\n        ]\n    }\n];\n\nconst TimeTable = ({date}) => {\n    const [arTimeTable, setArTimeTable] = useState([]);\n\n    useEffect(() => {\n        setArTimeTable(raspisanie);\n    });\n\n    return(\n        <Group>\n            <CardGrid className=\"timetable\" size=\"l\">\n            {\n                arTimeTable.length > 0 &&\n                arTimeTable.map((item) => {\n                    return(\n                        <Card size=\"l\" mode=\"shadow\" className=\"timetable__item\" key={item.id}>\n                            <div className=\"timetable__item-title\">{item.group}</div>\n                            <div className=\"timetable__item-lesson\">\n                                {\n                                    item.items.length > 0 &&\n                                    item.items.map((lesson) => {\n                                        return(\n                                            <div className=\"lesson\">\n                                                <div className=\"lesson-number\">\n                                                    <span>{lesson.number}</span>\n                                                </div>\n                                                <div className=\"lesson-name\">{lesson.name}</div>\n                                                <div className=\"lesson-teacher\">{lesson.teacher}</div>\n                                                <div className=\"lesson-office\">{lesson.office}</div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </Card>\n                    )\n                })\n            }\n            </CardGrid>\n        </Group>\n    );\n}; \n\nTimeTable.PropTypes = {\n    date:PropTypes.string\n};\n\nexport default TimeTable;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, PanelHeaderButton } from '@vkontakte/vkui';\nimport { Icon28SettingsOutline } from '@vkontakte/icons';\n\nimport ScrollData from '../components/scrollDate/ScrollDate';\nimport TimeTable from '../components/timetable/TimeTable';\n\nconst Home = ({ id, go, fetchedUser }) => {\n\tconst [activeDate, setActiveDate] = useState(null);\n\n\treturn(\n\t\t<Panel id={id}>\n\t\t<PanelHeader left={<PanelHeaderButton onClick={go} data-to=\"setting\"> <Icon28SettingsOutline/></PanelHeaderButton>}>\n\t\t\tРасписание\n\t\t</PanelHeader>\n\t\t{/* {fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>} */}\n\t\t\n\t\t<ScrollData goDate={setActiveDate}/>\n\n\t\t<TimeTable date={activeDate}/>\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n\t);\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Icon12Download } from '@vkontakte/icons';\nimport { ChipsSelect } from '@vkontakte/vkui/dist/unstable';\n\nimport { Panel, PanelHeader, PanelHeaderBack, Group, FormItem, CustomSelectOption, Avatar, Chip} from '@vkontakte/vkui';\n\nconst groups = [{ value: 'download', label: 'Скачать все и вся!', icon: <Icon12Download /> }, { value: '1', label: 'Arctic Monkeys'}, {value: '2', label: 'Звери'}, {value: '4', label: 'FACE'}, {value: '3', label: 'Depeche Mode'}, {value: '5', label: 'Linkin Park'}]\n\nconst Setting = props => {\n    const [selectedGroups, setSelectedGroups] = React.useState([]);\n\n    const groupsChipsProps = {\n        value: selectedGroups,\n        onChange: setSelectedGroups,\n        options: groups,\n        placeholder:\"Не выбраны\",\n        emptyText: 'Совсем ничего не найдено',\n      };\n\n\treturn(\n        <Panel id={props.id}>\n            <PanelHeader left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}>\n                Настройки\n            </PanelHeader>\n            <Group>\n                <FormItem top=\"Выберите группы\">\n                    <ChipsSelect\n                    {...groupsChipsProps}\n                    showSelected={false}\n                    closeAfterSelect={false}\n                    onChangeStart={(e, option) => {\n                        if (option.value === 'download') {\n                        e.preventDefault();\n                        alert('download!');\n                        }   \n                    }}\n                    renderChip={({ value, label, option: { src, icon }, ...rest }) => (\n                        <Chip\n                        value={value}\n                        before={<Avatar size={20} />}\n                        {...rest}\n                        >\n                        {label}\n                        </Chip>\n                    )}\n                    renderOption={({ option: { value, icon }, ...otherProps }) => {\n                        return (\n                        <CustomSelectOption\n                            before={icon ? <Avatar size={20}>{icon}</Avatar> : <Avatar size={20} />}\n                            {...otherProps}\n                        />\n                        );\n                    }}\n                    />\n                </FormItem>\n            </Group>\n        </Panel>\n    );\n};\n\nSetting.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Setting;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Setting from './panels/Setting';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t<Setting id='setting' go={go}/>\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}